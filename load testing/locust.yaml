apiVersion: v1 
kind: ConfigMap 
metadata: 
  name: frontend
data: 
  locustfile.py: |- 
    from locust import HttpUser, task, between 

    class QuickstartUser(HttpUser): 
        wait_time = between(0.7, 1.3) 

        @task 
        def hello_world(self): 
            self.client.get("/", headers={"Host": "example.com"}) 
--- 
apiVersion: apps/v1 
kind: Deployment 
metadata: 
  name: locust 
spec: 
  selector: 
    matchLabels: 
      app: locust 
  template: 
    metadata: 
      labels: 
        app: locust 
    spec: 
      containers: 
        - name: locust 
          image: locustio/locust 
          ports: 
            - containerPort: 8089 
          volumeMounts: 
            - mountPath: /home/locust 
              name: frontend
      volumes: 
        - name: frontend 
          configMap: 
            name: frontend
--- 
apiVersion: v1 
kind: Service 
metadata: 
  name: locust
spec: 
  ports: 
    - port: 8089 
      targetPort: 8089 
      nodePort: 30015 
  selector: 
    app: locust 
  type: LoadBalancer 
---
apiVersion: v1 
kind: ConfigMap 
metadata: 
  name: user-service
data: 
  locustfile.py: |- 
    from locust import HttpUser, task, between 

    class QuickstartUser(HttpUser): 
        wait_time = between(0.7, 1.3) 

        @task 
        def hello_world(self): 
            self.client.get("/users/get?auth0_id=auth0|62a6e8d208c009e84f4c5936", headers={"Host": "example.com"}) 
--- 
apiVersion: apps/v1 
kind: Deployment 
metadata: 
  name: locust-users
spec: 
  selector: 
    matchLabels: 
      app: locust-users
  template: 
    metadata: 
      labels: 
        app: locust-users
    spec: 
      containers: 
        - name: locust 
          image: locustio/locust 
          ports: 
            - containerPort: 8089 
          volumeMounts: 
            - mountPath: /home/locust 
              name: user-service 
      volumes: 
        - name: user-service 
          configMap: 
            name: user-service
---
apiVersion: v1 
kind: Service 
metadata: 
  name: locust-users
spec: 
  ports: 
    - port: 8089 
      targetPort: 8089 
      nodePort: 30016
  selector: 
    app: locust-users
  type: LoadBalancer 
---
apiVersion: v1 
kind: ConfigMap 
metadata: 
  name: locust-msg
data: 
  locustfile.py: |- 
    from locust import HttpUser, task, between 

    class QuickstartUser(HttpUser): 
        wait_time = between(0.7, 1.3) 

        @task 
        def hello_world(self): 
            self.client.get("/chats/get/1", headers={"Host": "example.com"}) 
--- 
apiVersion: apps/v1 
kind: Deployment 
metadata: 
  name: locust-msg
spec: 
  selector: 
    matchLabels: 
      app: locust-msg
  template: 
    metadata: 
      labels: 
        app: locust-msg
    spec: 
      containers: 
        - name: locust 
          image: locustio/locust 
          ports: 
            - containerPort: 8089 
          volumeMounts: 
            - mountPath: /home/locust 
              name: locust-msg
      volumes: 
        - name: locust-msg
          configMap: 
            name: locust-msg
--- 
apiVersion: v1 
kind: Service 
metadata: 
  name: locust-msg
spec: 
  ports: 
    - port: 8089 
      targetPort: 8089 
      nodePort: 30017
  selector: 
    app: locust-msg
  type: LoadBalancer 