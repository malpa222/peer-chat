on:
  push:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    steps:
    - 
      name: Checkout
      uses: actions/checkout@v2
    - 
      name: Build
      run: | 
        CI=false
        cd frontend
        npm install
        npm run build
    
  build-message-relay:
    runs-on: ubuntu-latest

    steps:
    - 
      name: Checkout
      uses: actions/checkout@v2
    - 
      name: Build
      run: | 
        cd message-relay
        cargo build -r
        ls -l
    -
      name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: message-relay
        path: target/release/message-relay

  build-user-service:
    runs-on: ubuntu-latest

    steps:
    - 
      name: Checkout
      uses: actions/checkout@v2

    - 
      name: Build
      run: | 
        cd user-service
        cargo build -r

  sonar-analysis:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  publish-user-service:
    needs: [build-user-service, sonar-analysis]
    runs-on: ubuntu-latest
  
    steps:
    -
      name: Checkout
      uses: actions/checkout@v2
    -
      name: users-env
      run: |
        cd user-service/
        echo "AUTH0_DOMAIN=${{ secrets.AUTH0_DOMAIN }}" >> .env
        echo "AUTH0_CLIENTID=${{ secrets.AUTH0_CLIENTID }}" >> .env
        echo "AUTH0_CLIENT_SECRET=${{ secrets.USERS_AUTH0_SECRET }}" >> .env
        echo "SERVER_ADDR=0.0.0.0" >> .env
        echo "SERVER_PORT=5000" >> .env
        echo "DATABASE_URL=${{ secrets.USERS_DB_URL }}" >> .env
    -
      name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    -
      name: push-user-service
      uses: docker/build-push-action@v2
      with:
        context: ./user-service
        push: true
        tags: malpa222/peerchat:user-service

        name: Build

  publish-frontend:
    needs: [build-frontend, sonar-analysis]
    runs-on: ubuntu-latest
  
    steps:
    -
      name: Checkout
      uses: actions/checkout@v2
    -
      name: frontend-env
      run: |
        cd frontend/
        echo "REACT_APP_AUTH0_DOMAIN=${{ secrets.AUTH0_DOMAIN }}" >> .env
        echo "REACT_APP_AUTH0_CLIENTID=${{ secrets.AUTH0_CLIENTID }}" >> .env
    -
      name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    -
      name: push-frontend
      uses: docker/build-push-action@v2
      with:
        context: ./frontend
        push: true
        tags: malpa222/peerchat:frontend
